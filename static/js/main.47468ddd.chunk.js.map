{"version":3,"sources":["components/projects/romeAudio.png","components/projects/VP.png","components/projects/musiK.png","components/projects/tic-tac-toe.png","components/projects/harryPatrick.jpg","components/home.js","components/introduction.js","components/projects.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","console","log","app","createPlane","planeGeometry","THREE","planeMaterial","color","plane","position","set","rotation","x","Math","PI","createSpotlight","spotlight","createParticleSystem","particles","i","p","randInt","vx","vy","vz","vertices","push","particleMaterial","size","map","blending","transparent","alphaTest","init","scene","camera","window","innerWidth","innerHeight","y","z","lookAt","renderer","setSize","setClearColor","shadowMap","enabled","document","body","appendChild","domElement","add","ambient","particleSystem","animate","animateParticles","render","requestAnimationFrame","geometry","length","distSquared","gravityForce","verticesNeedUpdate","addEventListener","resize","onload","className","Projects","href","target","src","romeAudio","vp","musikdb","tictactoe","Contact","harry","alt","App","to","path","component","Home","exact","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47468ddd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/romeAudio.7900963b.png\";","module.exports = __webpack_public_path__ + \"static/media/VP.cfa05f41.png\";","module.exports = __webpack_public_path__ + \"static/media/musiK.f4036985.png\";","module.exports = __webpack_public_path__ + \"static/media/tic-tac-toe.7cdb7cce.png\";","module.exports = __webpack_public_path__ + \"static/media/harryPatrick.4093f5d9.jpg\";","import React from 'react';\nimport * as THREE from 'three';\n\nconst Introduction = () => {\n\n  console.log('lib');\n\nvar app = app || {};\n\napp.createPlane = () => {\n  const planeGeometry = new THREE.PlaneGeometry(120, 20);\n  const planeMaterial = new THREE.MeshLambertMaterial({\n    color: 0xCCCCCC\n  });\n\n  // Combine the geometry (shape) and the material (what\n  // the surface looks like) into a mesh, the actual\n  // 3D object\n  const plane = new THREE.Mesh( planeGeometry, planeMaterial );\n\n  plane.position.set(15, 0, 0);\n  plane.rotation.x = -0.5 * Math.PI  // because of math(s)\n  // plane.receiveShadow = true;  // shadows are cast onto this\n\n  return plane;\n};  // createPlane()\n\n\napp.createSpotlight = () => {\n\n  const spotlight = new THREE.SpotLight( 0xFFFFFF );\n  spotlight.position.set( -10, 60, 10 );\n\n  return spotlight;\n}; // createSpotlight()\n\n\napp.createParticleSystem = () => {\n  const particles = new THREE.Geometry();\n  const dist = 1500;\n  for (let i = 0; i < 20000; i++) {\n    const p = new THREE.Vector3(\n      100,\n      THREE.Math.randInt(-dist, dist),\n      THREE.Math.randInt(-dist, dist)\n    );\n    p.vx = 0//THREE.Math.randFloat(-1, 1);\n    p.vy = 0//THREE.Math.randFloat(-1, 1);\n    p.vz = 0//THREE.Math.randFloat(-1, 1)\n    particles.vertices.push(p)\n  }\n\n  const particleMaterial = new THREE.PointsMaterial({\n    color: 0xFFFFFF,\n    size: 2,\n    map: THREE.TextureLoader('projects/snowflake.png'),\n    blending: THREE.AdditiveBlending,\n    transparent: true,\n    alphaTest: 0.5\n  })\n  const particleSystem = new THREE.Points(\n    particles,\n    particleMaterial\n  )\n  return particleSystem\n\n}\n\napp.init = () => {\n  console.log('huhu');\n\n  // app.gui = new dat.GUI();\n  // app.gui.add(app.controls, 'rotationSpeed', 0, 1);\n  // app.gui.add(app.controls, 'bouncingSpeed', 0, 2)\n  // app.gui.add(app.controls, 'particleVelocityScale', -1, 1)\n\n  // The scene stores and keeps track of all the objects we're creating,\n  // including the camera and the lights\n  app.scene = new THREE.Scene();\n\n  app.camera = new THREE.PerspectiveCamera(\n    100,  // field of view\n    window.innerWidth / window.innerHeight,  // screen ratio\n    0.1,  // near field (how close to the camera should we still see things)\n    1000  // far field (how far away from the camera should we still see things)\n  );\n\n  // Where exactly is the camera in the scene?\n  app.camera.position.x = -500;\n  app.camera.position.y = 0;\n  app.camera.position.z = 600;\n  // app.camera.position.set(-30, 40, 30);\n\n  app.camera.lookAt(app.scene.position);  // Look at the origin: x=0, y=0, z=0\n\n  // The renderer calculates how to draw all the objects in the scene,\n  // based on the lighting and the camera perspective, and renders\n  // it all down to a 2D image to show in a <canvas> browser tag\n  app.renderer = new THREE.WebGLRenderer();  // use hardware acceleration of gfx card!\n  app.renderer.setSize( window.innerWidth, window.innerHeight );\n  app.renderer.setClearColor( 0x000000 );  // background colour\n\n  //\n  app.renderer.shadowMap.enabled = true;  // shadows are computationally expensive, and thus disabled by default\n  // app.renderer.shadowMap.type = THREE.PCFSoftShadowMap;  // WTF???\n\ndocument.body.appendChild( app.renderer.domElement );\n\n\n  app.spotlight = app.createSpotlight();\n  app.scene.add( app.spotlight );\n  //control camera position and zoom\n\n  app.ambient = new THREE.AmbientLight(0x666666);\n  app.scene.add(app.ambient)\n\n  app.particleSystem = app.createParticleSystem();\n  app.scene.add(app.particleSystem)\n  // app.stats = app.addStats()\n  app.animate();//kick off the animation process\n  // Finally, actually render everything once\n}; // app.init()\n\n  app.animate = () => {\n    // app.stats.update();\n    app.animateParticles()\n    // app.controls.step += app.controls.bouncingSpeed;\n\n    app.renderer.render( app.scene, app.camera );\n\n    requestAnimationFrame( app.animate )\n\n  }\n  app.animateParticles = () => {\n\n  const particles= app.particleSystem.geometry.vertices;\n  for (let i = 0; i < particles.length; i++) {\n    const p = particles[i]\n    const distSquared = (p.x * p.x) + (p.y * p.y) + (p.z * p.z)\n\n    if(distSquared > 10.0){\n    const gravityForce = -0.2 * (1.0 /distSquared)\n    p.vx += gravityForce * p.x\n    p.vy += gravityForce * p.y\n    // p.vz += gravityForce * p.z\n}\n\n    p.x -= p.vx * -0.8;\n    p.y -= p.vy * -0.8;\n    p.z -= p.vz * -0.8;\n    // p.x += 2 * app.controls\n  }//for\n  app.particleSystem.geometry.verticesNeedUpdate = true;\n  // app.particleSystem.rotation.y += 0.01\n\n}\n\nwindow.addEventListener('resize', app.resize)\n\nwindow.onload = app.init;\n\n  return (\n\n\n    <div className=\"stars\">\n\n    </div>\n\n  )\n};\n\nexport default Introduction\n","import React from 'react';\n\nconst Introduction = () => {\n\n  return (\n    <div className=\"containerIntroduction\">\n        <p>\n          In a previous life, I lived in Europe working in kitchens. I am extremely thankful for this experience. This employment  gave me the opportunity to work with people of all backgrounds, greatly improving my ability to work in teams and my understanding of communication both verbally and non-verbally.\n        </p>\n        <p>\n          As a junior developer I am looking for a role where I am in the best position to learn and develop my programming skills\n        </p>\n        <p>\n          Programming is an unknown mysterious world to me, but within this mystery are possibilities to create and influence the world around me. I aim to combine my education in technology with my interest in renewable energy. I am passionate about creating cleaner air, oceans and land, I will always look for opportunities to help create this environmental change.\n      </p>\n    </div>\n  )\n}\n\nexport default Introduction\n","import React from 'react';\nimport romeAudio from './projects/romeAudio.png';\n// https://harrypatrick94.github.io/RomeAudio-Frontend/#/\nimport vp from './projects/VP.png';\n// https://maiqvu.github.io/visualpedia/#/login\nimport musikdb from './projects/musiK.png';\n// https://ga-project1-musik-db.herokuapp.com/login\nimport tictactoe from './projects/tic-tac-toe.png';\n// https://harrypatrick94.github.io/tic-tac-toe/\nimport '../App.css'\n\nconst Projects = () => {\n\n  return(\n    \n    <>\n      <div className=\"explaination\">\n        <h2 className=\"projectsHeading\">Projects</h2>\n        <p>\n          <h4 className=\"projectsHeading\">RomeAudio</h4>\n          <p>\n            RomeAudio is a react built in browser drum machine. After enjoying a friend's analog drum machine, I began to think how awesome it would be to have my own. This is when I began to think about the possibilities provided by tone.js.\n          </p>\n          <p>\n            This drum machine is built with combining a javascript, react front end with a node backend utilising the mongoDB, mongoose and Atlas online hosting. Tone.js was also used to import and play sounds within the browser.\n          </p>\n          <p>\n          I’m super excited to build a fun project that can help provide access to musical possibilities I didn’t previously know were possible. Technologies used: React, Node, MongoDB, Mongoose, Tone.js\n          </p>\n          <p>\n          https://github.com/harrypatrick94/RomeAudio-Frontend\n          https://github.com/harrypatrick94/RomeAudio-Backend\n          </p>\n          <p>\n            <a href=\"https://harrypatrick94.github.io/RomeAudio-Frontend/#/\" target=\"_blank\"><img src={romeAudio} className=\"projectImg\"/></a>\n          </p>\n        </p>\n        <p>\n          <h4 className=\"projectsHeading\">Visualpedia</h4>\n          <p>\n            Visualpedia was a collaborative projects with 3 other General Assembly students.\n          </p>\n          <p>\n            Visual Representation of the World Bank API indicators. This was a group project built in React with Chart.js. Delivered the complete back-end API made with rails and produced as front-end in React.\n          </p>\n          <p>\n           This was first experience working in a team of developers. It was a great learning experience we collaborate from start to finish to ensure we delivered our desired product.\n           Technologies used: React, Ruby on Rails, PostgreSQL, Chart.js\n          </p>\n          <p>\n            https://github.com/maiqvu/visualpedia\n            https://maiqvu.github.io/visualpedia/#/\n            https://github.com/spicysoup/visualpedia-backend\n          </p>\n          <p>\n            <a href=\"https://maiqvu.github.io/visualpedia/#/login\" target=\"_blank\"><img src={vp} className=\"projectImg\"/></a>\n          </p>\n        </p>\n        <p>\n          <h4 className=\"projectsHeading\">MusikDB</h4>\n          <p>\n            A music database application the facilitates the storage of and updating of favourite songs and musicians\n          </p>\n          <p>\n            This was a week long sprint to implement and complete front and back end application using ruby, rails, javaScript and the Tone.js library.\n          </p>\n          <p>\n           A simple keyboard has been built using Tone.js allowing the user to practice there favourite songs within the browser.\n           Technologies used: Ruby on Rails, PostgreSQL, JavaScript, jQuery.\n          </p>\n          <p>\n            https://ga-project1-musik-db.herokuapp.com/login\n            https://github.com/harrypatrick94/Project-1-GA\n\n          </p>\n          <p>\n            <a href=\"https://maiqvu.github.io/visualpedia/#/login\" target=\"_blank\"><img src={musikdb} className=\"projectImg\"/></a>\n          </p>\n        </p>\n        <p>\n          <h4 className=\"projectsHeading\">Tic-Tac-Toe</h4>\n          <p>\n            A replica of game of Tic-Tac-Toe, with the ability to draw your own game board in the browser.\n          </p>\n          <p>\n            In this project we learnt to manipulate the DOM and update it dynamically as objects and arrays are updated. Technologies used: HTML/CSS, JavaScript, jQuery\n          </p>\n          <p>\n            https://harrypatrick94.github.io/tic-tac-toe/\n            https://github.com/harrypatrick94/tic-tac-toe\n          </p>\n          <p>\n            <a href=\"https://maiqvu.github.io/visualpedia/#/login\" target=\"_blank\"><img src={tictactoe} className=\"projectImg\"/></a>\n          </p>\n        </p>\n      </div>\n    </>\n  )\n}\n\nexport default Projects\n","import React from 'react';\nimport harry from './projects/harryPatrick.jpg';\n\nconst Contact = () => {\n\n  return (\n    <div className=\"containerContact\">\n        <h1>Hi I'm Harry!</h1>\n        <img src={harry} alt=\"ME!!\" className=\"me\"/>\n        <p>\n          I am Melbourne based aspiring developer. With an interest in creative coding, environmental kindness and outdoor entertainment.\n        </p>\n        <ul className=\"contactUl\">\n          <li className=\"contactLI\"><a href=\"https://www.linkedin.com/in/harrygpatrick/\" target=\"_blank\">linkedin</a></li>\n          <li className=\"contactLI\"><a href=\"https://github.com/harrypatrick94\" target=\"_blank\">github</a></li>\n          <li className=\"contactLI\"><a href=\"mailto:harry.g.patrick94@gmail.com\" target=\"_blank\">Email</a></li>\n        </ul>\n    </div>\n  )\n}\n\nexport default Contact\n","import React from 'react';\nimport {\n  Route,\n  Link,\n  HashRouter as Router\n} from 'react-router-dom'\nimport Home from './components/home'\nimport Introduction from './components/introduction'\nimport Technologies from './components/technologies'\nimport Projects from './components/projects'\nimport Contact from './components/contact'\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n            <div className=\"navBar\">\n              <nav>\n                <ul className=\"navBarUL\">\n                  <Link to='/'><li className=\"navBarLI\">Contact</li></Link>\n                  <Link to=\"/introduction\"><li className=\"navBarLI\">Me</li></Link>\n                  <Link to=\"/projects\"><li className=\"navBarLI\">Projects</li></Link>\n\n                </ul>\n              </nav>\n            </div>\n\n            <Route  path='/' component={Home}/>\n            <Route exact path='/' component={Contact}/>\n            <Route exact path='/introduction' component={Introduction}/>\n            <Route exact path='/projects' component={Projects}/>\n\n\n      </Router>\n    </>\n  );\n}\n// <Link to=\"/technologies\"><li className=\"navBarLI\">Technologies</li></Link>\n// <Route exact path='/technologies' component={Technologies} />\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}